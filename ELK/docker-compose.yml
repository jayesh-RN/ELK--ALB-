version: '3.8'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - elk_network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.14.0
    container_name: logstash
    user: root
    command: >
      bash -c "
        bin/logstash-plugin install logstash-input-s3 && 
        bin/logstash-plugin install logstash-filter-grok &&
        bin/logstash-plugin install logstash-filter-geoip &&
        bin/logstash-plugin install logstash-filter-useragent &&
        bin/logstash -f /usr/share/logstash/pipeline/pipeline.conf"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/config:/usr/share/logstash/config
      - ./sincedb:/var/lib/logstash/sincedb
      - ~/.aws:/root/.aws
    environment:
      - XPACK_MONITORING_ENABLED=false
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=eu-central-1
    depends_on:
      - elasticsearch
    networks:
      - elk_network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - elk_network

volumes:
  esdata:
    driver: local

networks:
  elk_network:
    driver: bridge